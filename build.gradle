plugins {
    id 'java-library'
    id 'org.springframework.boot' apply(false)
    id 'io.spring.dependency-management'
    id 'org.asciidoctor.jvm.convert' apply(false)
}

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //data
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    // application
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // security && OAuth && Jwt
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // document
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // utils
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // http client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"
    }
}

// encoding
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.compilerArgs.add("-parameters")
}

allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"
    sourceCompatibility = project.javaVersion

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com'
    version = '0.0.1-SNAPSHOT'

    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        }
    }

    bootJar.enabled = false
    jar.enabled = true

    tasks.named('bootJar') { //빌드할 때 bootjar 파일로 하겠다는 의미
        enabled = false
    }

    tasks.named('jar') { //빌드할 때 jar 파일로 하겠다는 의미
        enabled = true
    }

    test {
        useJUnitPlatform {
            excludeTags('develop', 'restdocs')
        }
    }

    tasks.register('unitTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            excludeTags('develop', 'context', 'restdocs')
        }
    }

    tasks.register('contextTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('context')
        }
    }

    tasks.register('restDocsTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('restdocs')
        }
    }

    tasks.register('developTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('develop')
        }
    }

}
