plugins {
    id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}"
}

dependencies {
    implementation project(path: ':core:core-api')
    implementation project(":core:core-enum")
    implementation project(":support:monitoring")
    implementation project(":support:logging")
    implementation project(":storage:storage-mysql")
    implementation project(":storage:storage-redis")
    implementation project(":clients:client-api")

    implementation("org.springframework.security:spring-security-test")
    implementation("com.jayway.jsonpath:json-path:2.9.0")
    implementation("com.google.code.gson:gson:2.10.1")

    compileOnly 'jakarta.servlet:jakarta.servlet-api'
    compileOnly 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'com.fasterxml.jackson.core:jackson-databind'
    api 'org.springframework.restdocs:spring-restdocs-mockmvc'
    api 'org.springframework.restdocs:spring-restdocs-restassured'
    api 'io.rest-assured:spring-mock-mvc'

    // application
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // security && OAuth && Jwt
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // document
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // utils
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

repositories {
    mavenCentral()
}

kotlin {
    jvmToolchain("${javaVersion}" as int)
}

test {
    useJUnitPlatform()
}
